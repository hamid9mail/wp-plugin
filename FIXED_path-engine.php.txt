<?php
/**
 * Plugin Name:       PsychoCourse Path Engine (Complete Display Modes Edition)
 * Description:       موتور جامع مسیر رشد با حالت‌های نمایش مختلف: آکاردئون، نقشه گنج، کارت و تایم‌لاین
 * Version:           12.4.0
 * Author:            Hamid Hashem Matouri (Complete Display Modes)
 * Text Domain:       psych-path-engine
 */

if (!defined('ABSPATH')) {
    exit; // Exit if accessed directly
}

if (class_exists('PsychoCourse_Path_Engine')) {
    return;
}

// =====================================================================
// GLOBAL HELPER FUNCTIONS (for compatibility with coach-module)
// =====================================================================

if (!function_exists('psych_path_get_viewing_context')) {
    /**
     * Global function to get viewing context for coach module compatibility
     */
    function psych_path_get_viewing_context() {
        return PsychoCourse_Path_Engine::get_instance()->get_viewing_context();
    }
}

/**
 * Enhanced Path Engine Class with Multiple Display Modes
 */
final class PsychoCourse_Path_Engine {

    private static $instance = null;
    private $path_data = [];
    private $is_shortcode_rendered = false;
    private $viewing_context = null;
    private $display_mode = 'timeline'; // Default display mode

    public static function get_instance() {
        if (null === self::$instance) {
            self::$instance = new self();
        }
        return self::$instance;
    }

    private function __construct() {
        $this->define_constants();
        $this->add_hooks();
        $this->init_viewing_context();
    }

    private function define_constants() {
        define('PSYCH_PATH_VERSION', '12.4.0');
        define('PSYCH_PATH_META_COMPLETED', 'psych_path_completed_stations');
        define('PSYCH_PATH_META_UNLOCK_TIME', 'psych_path_station_unlock_time');
        define('PSYCH_PATH_AJAX_NONCE', 'psych_path_ajax_nonce');

        // Referral System Constants
        define('PSYCH_PATH_REFERRAL_COOKIE', 'psych_referral_user_id');
        define('PSYCH_PATH_REFERRAL_USER_META_COUNT', 'psych_referral_count');
        define('PSYCH_PATH_REFERRED_BY_USER_META', 'referred_by_user_id');

        // Feedback System Constants
        define('PSYCH_PATH_FEEDBACK_USER_META_COUNT', 'psych_feedback_received_count');

        // New: Approval System Constants
        define('PSYCH_PATH_META_AWAITING_APPROVAL', 'psych_path_awaiting_approval');
    }

    private function add_hooks() {
        // Core Shortcodes
        add_shortcode('psychocourse_path', [$this, 'render_path_shortcode']);
        add_shortcode('station', [$this, 'register_station_shortcode']);
        add_shortcode('mission_action_link', [$this, 'render_mission_action_link_shortcode']);

        // Content Section Shortcodes
        add_shortcode('static_content', [$this, 'register_static_content']);
        add_shortcode('mission_content', [$this, 'register_mission_content']);
        add_shortcode('result_content', [$this, 'register_result_content']);


        // AJAX Handlers
        add_action('wp_ajax_psych_path_get_station_content', [$this, 'ajax_get_station_content']);
        add_action('wp_ajax_psych_path_get_inline_station_content', [$this, 'ajax_get_inline_station_content']);
        add_action('wp_ajax_psych_path_complete_mission', [$this, 'ajax_complete_mission']);
        add_action('wp_ajax_psych_path_coach_approve_mission', [$this, 'ajax_coach_approve_mission']);

        // Page template for actor-based missions
        add_action('template_redirect', [$this, 'handle_actor_mission_page']);

        // Assets and Footer Elements
        add_action('wp_enqueue_scripts', [$this, 'enqueue_assets']);
        add_action('wp_footer', [$this, 'render_footer_elements']);

        // Integration Hooks
        add_action('gform_after_submission', [$this, 'handle_gform_submission'], 10, 2);
        add_action('psych_feedback_submitted', [$this, 'handle_feedback_submission'], 10, 2);

        // Referral System Hooks
        add_action('init', [$this, 'capture_referral_code']);
        add_action('user_register', [$this, 'process_referral_on_registration'], 10, 1);

        // Coach Module Integration
        add_action('init', [$this, 'sync_with_coach_module'], 5);
    }

    private function init_viewing_context() {
        // Initialize session if not started (compatibility with coach module)
        if (!session_id() && !headers_sent()) {
            @session_start();
        }
    }

    /**
     * Get viewing context - compatible with coach module
     */
    public function get_viewing_context() {
        if ($this->viewing_context !== null) {
            return $this->viewing_context;
        }

        $real_user_id = isset($_SESSION['_seeas_real_user']) ? intval($_SESSION['_seeas_real_user']) : get_current_user_id();
        $viewed_user_id = get_current_user_id();

        $this->viewing_context = [
            'is_impersonating' => ($real_user_id != $viewed_user_id && $real_user_id > 0),
            'real_user_id'     => $real_user_id,
            'viewed_user_id'   => $viewed_user_id,
        ];

        return $this->viewing_context;
    }

    /**
     * Sync with coach module settings and permissions
     */
    public function sync_with_coach_module() {
        // Check if coach module is active
        if (class_exists('Psych_Coach_Module')) {
            // Add coach-specific filters and actions
            add_filter('psych_path_can_view_station', [$this, 'coach_station_access_filter'], 10, 3);
            add_action('psych_path_station_completed', [$this, 'notify_coach_on_completion'], 10, 3);
        }
    }

    /**
     * Filter station access based on coach permissions
     */
    public function coach_station_access_filter($can_access, $user_id, $station_data) {
        $context = $this->get_viewing_context();

        // If coach is impersonating, check their permissions
        if ($context['is_impersonating']) {
            $coach_id = $context['real_user_id'];
            $current_page_id = get_queried_object_id();

            // Check if coach has access to this page (using coach module logic)
            if (class_exists('Psych_Coach_Module')) {
                $coach_allowed_pages = get_user_meta($coach_id, 'psych_coach_allowed_pages', true) ?: [];
                if (!user_can($coach_id, 'manage_options') && !in_array($current_page_id, (array)$coach_allowed_pages)) {
                    return false;
                }
            }
        }

        return $can_access;
    }

    /**
     * Notify coach when student completes a station
     */
    public function notify_coach_on_completion($user_id, $node_id, $station_data) {
        // Get assigned coach for any product
        global $wpdb;
        $coach_id = $wpdb->get_var($wpdb->prepare(
            "SELECT meta_value FROM {$wpdb->usermeta}
             WHERE user_id = %d AND meta_key LIKE %s LIMIT 1",
            $user_id, 'psych_assigned_coach_for_product_%'
        ));

        if ($coach_id) {
            do_action('psych_coach_student_progress', $coach_id, $user_id, $node_id, $station_data);
        }
    }

    // =====================================================================
    // SECTION 2: CORE PATH & STATION LOGIC WITH DISPLAY MODES
    // =====================================================================

    public function render_path_shortcode($atts, $content = null) {
        $context = $this->get_viewing_context();
        $user_id = $context['viewed_user_id'];

        if (!$user_id && !is_admin()) {
            return '<p>برای مشاهده این مسیر، لطفاً ابتدا وارد شوید.</p>';
        }

        // Parse shortcode attributes
        $shortcode_atts = shortcode_atts([
            'display_mode' => 'timeline', // timeline, accordion, treasure_map, cards, simple_list
            'theme' => 'default', // default, dark, minimal, colorful
            'show_progress' => 'true',
            'path_title' => ''
        ], $atts);

        $this->display_mode = sanitize_key($shortcode_atts['display_mode']);
        $this->is_shortcode_rendered = true;
        $path_id = uniqid('path_');
        $this->path_data[$path_id] = [
            'stations' => [],
            'display_mode' => $this->display_mode,
            'theme' => sanitize_key($shortcode_atts['theme']),
            'show_progress' => $shortcode_atts['show_progress'] === 'true',
            'path_title' => sanitize_text_field($shortcode_atts['path_title'])
        ];

        // Process shortcode content
        do_shortcode($content);

        $this->process_stations($path_id, $user_id);

        ob_start();
        ?>
        <div class="psych-path-container psych-display-<?php echo esc_attr($this->display_mode); ?> psych-theme-<?php echo esc_attr($shortcode_atts['theme']); ?>"
             id="<?php echo esc_attr($path_id); ?>"
             data-display-mode="<?php echo esc_attr($this->display_mode); ?>">

            <?php if ($context['is_impersonating']) : ?>
                <div class="coach-path-notice">
                    <i class="fas fa-user-eye"></i>
                    در حال مشاهده مسیر به جای: <strong><?php echo esc_html(get_userdata($user_id)->display_name); ?></strong>
                </div>
            <?php endif; ?>

            <?php if (!empty($shortcode_atts['path_title'])) : ?>
                <div class="psych-path-header">
                    <h2 class="psych-path-title"><?php echo esc_html($shortcode_atts['path_title']); ?></h2>
                </div>
            <?php endif; ?>

            <?php if ($shortcode_atts['show_progress'] === 'true') : ?>
                <?php echo $this->render_progress_indicator($path_id); ?>
            <?php endif; ?>

            <?php echo $this->render_path_by_display_mode($path_id, $context); ?>
        </div>
        <?php
        return ob_get_clean();
    }

    // ... (rest of the known good file content) ...
}
?>
